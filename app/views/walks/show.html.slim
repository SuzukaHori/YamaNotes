- title 'ダッシュボード'
- set_meta_tags description: '現在の一周の状態が表示される画面です。'

= render 'shared/errors', model: @arrival
- if @walk.finished?
  .py-2
    p おめでとうございます🎉
    p #{Station.count}駅全てを歩ききりました！
    .flex.items-center.justify-center.my-2
      = link_to '初めからやり直す', walk_path, data: { turbo_method: :delete, turbo_confirm: '歩行データはすべて削除されます。よろしいですか？' }, class: 'mr-4 border p-2 hover:underline rounded-lg'
      = link_to '記録を見る', @walk.arrival_of_goal, class: 'text-blue-600 hover:underline'
- else
  .-mt-2
    = render partial: 'walk', locals: { walk: @walk, arrival: @arrival, current_station: @station }
= render partial: 'shared/map', locals: { current_station: @station, station_ids: @arrivals.pluck(:station_id) }
.flex.text-sm.md:text-xl.mt-2.items-start
  table.border-collapse.flex-1.mr-4
    tr
      td.px-2.py-1.border-dashed 出発から
      td.px-2.py-1.border-dashed data-controller="time" data-time-departure-date-value="#{@walk.created_at.iso8601}" #{elapsed_time(@walk)}
    tr
      td.px-2.py-1.border-dashed 歩いた駅
      td.px-2.py-1.border-dashed #{number_of_walked(@arrivals)}駅(残り#{number_of_remaining(@arrivals)}駅)
    tr
      td.px-2.py-1.pr-1 歩いた距離
      td.px-2.py-1.border-dashed 約#{total_distance(@arrivals)}km(残り#{remaining_distance(@arrivals)}km)
  = link_to '履歴', arrivals_path, class: 'text-base font-medium py-1 px-3 border hover:bg-gray-100 rounded-lg ml-auto'
